<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csy.csy_blog.dao.CommentReplyMapper" >
  <resultMap id="BaseResultMap" type="com.csy.csy_blog.domain.CommentReply" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="article_id" property="articleId" jdbcType="BIGINT" />
    <result column="comment_id" property="commentId" jdbcType="BIGINT" />
    <result column="from_id" property="fromId" jdbcType="BIGINT" />
    <result column="to_id" property="toId" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="from_name" property="fromName" jdbcType="VARCHAR" />
    <result column="to_name" property="toName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_id, comment_id, from_id, to_id, content, create_time, from_name, to_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from comment_reply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from comment_reply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.csy.csy_blog.domain.CommentReply" >
    insert into comment_reply (id, article_id, comment_id, 
      from_id, to_id, content, 
      create_time, from_name, to_name
      )
    values (#{id,jdbcType=BIGINT}, #{articleId,jdbcType=BIGINT}, #{commentId,jdbcType=BIGINT}, 
      #{fromId,jdbcType=BIGINT}, #{toId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{fromName,jdbcType=VARCHAR}, #{toName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.csy.csy_blog.domain.CommentReply" >
    insert into comment_reply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="commentId != null" >
        comment_id,
      </if>
      <if test="fromId != null" >
        from_id,
      </if>
      <if test="toId != null" >
        to_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="fromName != null" >
        from_name,
      </if>
      <if test="toName != null" >
        to_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commentId != null" >
        #{commentId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null" >
        #{fromId,jdbcType=BIGINT},
      </if>
      <if test="toId != null" >
        #{toId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromName != null" >
        #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="toName != null" >
        #{toName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csy.csy_blog.domain.CommentReply" >
    update comment_reply
    <set >
      <if test="articleId != null" >
        article_id = #{articleId,jdbcType=BIGINT},
      </if>
      <if test="commentId != null" >
        comment_id = #{commentId,jdbcType=BIGINT},
      </if>
      <if test="fromId != null" >
        from_id = #{fromId,jdbcType=BIGINT},
      </if>
      <if test="toId != null" >
        to_id = #{toId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromName != null" >
        from_name = #{fromName,jdbcType=VARCHAR},
      </if>
      <if test="toName != null" >
        to_name = #{toName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csy.csy_blog.domain.CommentReply" >
    update comment_reply
    set article_id = #{articleId,jdbcType=BIGINT},
      comment_id = #{commentId,jdbcType=BIGINT},
      from_id = #{fromId,jdbcType=BIGINT},
      to_id = #{toId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      from_name = #{fromName,jdbcType=VARCHAR},
      to_name = #{toName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>