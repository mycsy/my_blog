<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.csy.csy_blog.dao.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.csy.csy_blog.domain.Article" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="article_title" property="articleTitle" jdbcType="VARCHAR" />
    <result column="article_introduction" property="articleIntroduction" jdbcType="VARCHAR" />
    <result column="article_date" property="articleDate" jdbcType="TIMESTAMP" />
    <result column="article_views" property="articleViews" jdbcType="INTEGER" />
    <result column="article_like_count" property="articleLikeCount" jdbcType="INTEGER" />
    <result column="article_comment_count" property="articleCommentCount" jdbcType="INTEGER" />
    <result column="article_image_url" property="articleImageUrl" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.csy.csy_blog.domain.Article" extends="BaseResultMap" >
    <result column="article_content" property="articleContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, article_title, article_introduction, article_date, article_views, article_like_count, 
    article_comment_count, article_image_url
  </sql>
  <sql id="Blob_Column_List" >
    article_content
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from article
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.csy.csy_blog.domain.Article" >
    insert into article (id, article_title, article_introduction, 
      article_date, article_views, article_like_count, 
      article_comment_count, article_image_url, article_content
      )
    values (#{id,jdbcType=BIGINT}, #{articleTitle,jdbcType=VARCHAR}, #{articleIntroduction,jdbcType=VARCHAR}, 
      #{articleDate,jdbcType=TIMESTAMP}, #{articleViews,jdbcType=INTEGER}, #{articleLikeCount,jdbcType=INTEGER}, 
      #{articleCommentCount,jdbcType=INTEGER}, #{articleImageUrl,jdbcType=VARCHAR}, #{articleContent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.csy.csy_blog.domain.Article" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="articleTitle != null" >
        article_title,
      </if>
      <if test="articleIntroduction != null" >
        article_introduction,
      </if>
      <if test="articleDate != null" >
        article_date,
      </if>
      <if test="articleViews != null" >
        article_views,
      </if>
      <if test="articleLikeCount != null" >
        article_like_count,
      </if>
      <if test="articleCommentCount != null" >
        article_comment_count,
      </if>
      <if test="articleImageUrl != null" >
        article_image_url,
      </if>
      <if test="articleContent != null" >
        article_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="articleTitle != null" >
        #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleIntroduction != null" >
        #{articleIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="articleDate != null" >
        #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleViews != null" >
        #{articleViews,jdbcType=INTEGER},
      </if>
      <if test="articleLikeCount != null" >
        #{articleLikeCount,jdbcType=INTEGER},
      </if>
      <if test="articleCommentCount != null" >
        #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleImageUrl != null" >
        #{articleImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.csy.csy_blog.domain.Article" >
    update article
    <set >
      <if test="articleTitle != null" >
        article_title = #{articleTitle,jdbcType=VARCHAR},
      </if>
      <if test="articleIntroduction != null" >
        article_introduction = #{articleIntroduction,jdbcType=VARCHAR},
      </if>
      <if test="articleDate != null" >
        article_date = #{articleDate,jdbcType=TIMESTAMP},
      </if>
      <if test="articleViews != null" >
        article_views = #{articleViews,jdbcType=INTEGER},
      </if>
      <if test="articleLikeCount != null" >
        article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      </if>
      <if test="articleCommentCount != null" >
        article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleImageUrl != null" >
        article_image_url = #{articleImageUrl,jdbcType=VARCHAR},
      </if>
      <if test="articleContent != null" >
        article_content = #{articleContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.csy.csy_blog.domain.Article" >
    update article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      article_introduction = #{articleIntroduction,jdbcType=VARCHAR},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_views = #{articleViews,jdbcType=INTEGER},
      article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      article_image_url = #{articleImageUrl,jdbcType=VARCHAR},
      article_content = #{articleContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.csy.csy_blog.domain.Article" >
    update article
    set article_title = #{articleTitle,jdbcType=VARCHAR},
      article_introduction = #{articleIntroduction,jdbcType=VARCHAR},
      article_date = #{articleDate,jdbcType=TIMESTAMP},
      article_views = #{articleViews,jdbcType=INTEGER},
      article_like_count = #{articleLikeCount,jdbcType=INTEGER},
      article_comment_count = #{articleCommentCount,jdbcType=INTEGER},
      article_image_url = #{articleImageUrl,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="findPageCount" parameterType="java.util.Map" resultType="java.lang.Integer">
      SELECT count(1) FROM article
  </select>

  <select id="findPageInfo" resultMap="ResultMapWithBLOBs" parameterType="java.util.Map">
    SELECT <include refid="Base_Column_List"/> FROM article
    LIMIT #{startRow},#{pageSize}
  </select>

  <select id="findHotArticleList" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    SELECT <include refid="Base_Column_List"/> FROM article ORDER BY article_views DESC LIMIT #{limit}
  </select>

  <update id="addArticleReadCount" parameterType="java.lang.Long">
    UPDATE article SET article_views = article_views + 1 WHERE id = #{articleId}
  </update>
</mapper>